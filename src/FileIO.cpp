//
//  FileIO.cpp
//  sudoku
//
//  Created by Neslisah Torosdagli on 11/9/15.
//  Copyright (c) 2015 Neslisah Torosdagli. All rights reserved.
//

#include "FileIO.h"
#include <iostream>

bool parse(std::string filename, Board *pBoard){

    std::string fn = "data/"+filename;
    FILE *fp = fopen(fn.c_str(), "r");
    
    if (fp == NULL){
        return (false);
    }
    
    int row = 0;
    int col = 0;
    
    while (!feof(fp)){
        
        int value;
        fread(&value, sizeof(int), 1, fp);
        
        if (value > 0){
            pBoard->set(row, col, value, 0);
            pBoard->set(row, col, value, 1);
        }
        
        col++;
        if (col == 9){
            col = 0;
            row++;
        }
    }
    
    fclose(fp);
    
    return (true);
}

int puzzle1[] = {1, 2, 7, 6, 0, 0, 4, 8, 5,
                 8, 4, 0, 1, 0, 5, 0, 0, 7,
                 0, 9, 5, 7, 4, 0, 3, 0, 2,
                 2, 6, 9, 0, 0, 0, 5, 0, 0,
                 0, 0, 0, 8, 5, 0, 6, 4, 0,
                 0, 5, 0, 0, 7, 0, 2, 0, 1,
                 3, 1, 4, 0, 0, 0, 0, 2, 0,
                 0, 0, 6, 2, 3, 7, 0, 0, 0,
                 0, 0, 0, 0, 6, 0, 8, 5, 0};

int puzzle2[] = {7, 5, 0, 9, 8, 0, 0, 0, 0,
                 6, 0, 0, 0, 5, 0, 0, 0, 8,
                 0, 0, 0, 0, 0, 0, 4, 2, 0,
                 0, 0, 0, 3, 9, 5, 0, 0, 0,
                 0, 2, 3, 0, 0, 0, 0, 8, 1,
                 0, 0, 0, 8, 0, 0, 0, 5, 0,
                 0, 0, 4, 0, 0, 0, 3, 0, 0,
                 0, 0, 0, 0, 7, 9, 0, 0, 0,
                 0, 0, 8, 0, 0, 0, 0, 1, 2};

int puzzle3[] = {8, 4, 2, 0, 0, 0, 0, 0, 0,
                 0, 0, 0, 5, 0, 1, 7, 0, 0,
                 0, 0, 0, 0, 0, 0, 3, 8, 0,
                 9, 5, 0, 0, 0, 0, 0, 0, 2,
                 0, 0, 0, 0, 5, 0, 0, 0, 0,
                 0, 0, 0, 9, 0, 0, 0, 4, 6,
                 1, 0, 0, 0, 0, 7, 4, 0, 0,
                 0, 0, 8, 0, 6, 0, 0, 0, 0,
                 0, 0, 4, 0, 0, 0, 0, 3, 8};

int puzzle4[] = {5, 0, 9, 6, 0, 0, 0, 0, 0,
                 0, 3, 0, 8, 0, 7, 9, 2, 0,
                 0, 0, 0, 3, 0, 0, 8, 0, 0,
                 0, 0, 0, 0, 1, 6, 0, 8, 0,
                 0, 5, 0, 0, 0, 0, 0, 1, 0,
                 0, 0, 0, 0, 0, 0, 0, 3, 2,
                 1, 0, 4, 0, 3, 0, 0, 0, 0,
                 0, 0, 6, 7, 0, 9, 0, 0, 0,
                 0, 0, 0, 0, 0, 0, 0, 0, 3};

int puzzle5[] = {0, 0, 4, 0, 8, 6, 0, 0, 0,
                 9, 0, 3, 4, 7, 0, 1, 0, 0,
                 0, 8, 2, 5, 0, 0, 0, 6, 7,
                 0, 9, 0, 8, 0, 0, 3, 0, 2,
                 0, 5, 0, 0, 0, 0, 0, 4, 0,
                 2, 0, 6, 0, 0, 1, 0, 5, 0,
                 3, 4, 0, 0, 0, 9, 2, 7, 0,
                 0, 0, 5, 0, 3, 4, 8, 0, 6,
                 0, 0, 0, 7, 1, 0, 5, 0, 0};

int puzzle6[] = {0, 0, 5, 3, 0, 0, 0, 0, 0,
                 8, 0, 0, 0, 0, 0, 0, 2, 0,
                 0, 7, 0, 0, 1, 0, 5, 0, 0,
                 4, 0, 0, 0, 0, 5, 3, 0, 0,
                 0, 1, 0, 0, 7, 0, 0, 0, 6,
                 0, 0, 3, 2, 0, 0, 0, 8, 0,
                 0, 6, 0, 5, 0, 0, 0, 0, 9,
                 0, 0, 4, 0, 0, 0, 0, 3, 0,
                 0, 0, 0, 0, 0, 9, 7, 0, 0};

int puzzle7[] = {0, 0, 0, 0, 6, 8, 0, 0, 0,
                 0, 2, 0, 7, 0, 0, 5, 0, 0,
                 0, 0, 0, 0, 4, 0, 0, 2, 0,
                 8, 0, 0, 4, 0, 0, 0, 0, 3,
                 3, 0, 0, 0, 8, 9, 0, 7, 0,
                 4, 6, 1, 0, 0, 0, 0, 0, 0,
                 0, 7, 6, 0, 0, 0, 9, 0, 0,
                 0, 0, 0, 0, 0, 0, 0, 0, 8,
                 0, 0, 0, 0, 0, 1, 6, 0, 0};

int puzzle8[] = {2, 0, 0, 0, 9, 3, 7, 0, 0,
                 5, 0, 8, 0, 0, 0, 0, 0, 0,
                 0, 6, 7, 0, 0, 0, 0, 0, 0,
                 0, 9, 0, 0, 0, 4, 0, 2, 5,
                 0, 0, 0, 0, 0, 0, 9, 0, 7,
                 0, 0, 0, 0, 8, 0, 0, 0, 0,
                 0, 0, 0, 0, 0, 5, 4, 0, 0,
                 0, 0, 0, 3, 0, 1, 0, 5, 0,
                 0, 7, 0, 8, 0, 0, 0, 6, 0};

int puzzle9[] = {6, 0, 0, 0, 4, 0, 0, 1, 0,
                 0, 1, 0, 0, 0, 0, 0, 0, 3,
                 0, 0, 2, 0, 0, 8, 0, 4, 0,
                 0, 2, 0, 0, 0, 0, 0, 0, 4,
                 0, 0, 7, 3, 8, 2, 6, 0, 0,
                 5, 0, 0, 0, 0, 0, 0, 2, 0,
                 0, 9, 0, 5, 0, 0, 1, 0, 0,
                 4, 0, 0, 0, 0, 0, 0, 7, 0,
                 0, 5, 0, 0, 9, 0, 0, 0, 2};

int puzzle10[] = {0, 3, 0, 0, 4, 6, 2, 0, 0,
                  8, 0, 0, 3, 1, 0, 7, 4, 0,
                  0, 2, 0, 0, 0, 8, 0, 0, 0,
                  4, 1, 0, 0, 0, 0, 6, 0, 0,
                  0, 0, 0, 0, 7, 1, 8, 5, 2,
                  5, 8, 2, 0, 3, 0, 0, 7, 4,
                  3, 0, 1, 5, 0, 4, 9, 2, 0,
                  0, 0, 5, 0, 6, 7, 0, 3, 0,
                  0, 4, 8, 2, 9, 0, 5, 0, 7};

int puzzle11[] = {8, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 3, 6, 0, 0, 0, 0, 0,
                  0, 7, 0, 0, 9, 0, 2, 0, 0,
                  0, 5, 0, 0, 0, 7, 0, 0, 0,
                  0, 0, 0, 0, 4, 5, 7, 0, 0,
                  0, 0, 0, 1, 0, 0, 0, 3, 0,
                  0, 0, 1, 0, 0, 0, 0, 6, 8,
                  0, 0, 8, 5, 0, 0, 0, 1, 0,
                  0, 9, 0, 0, 0, 0, 4, 0, 0};

int sudoku_medium[] = {0, 0, 0, 0, 0, 5, 0, 4, 0,
                       0, 0, 7, 4, 0, 2, 5, 0, 1,
                       2, 0, 0, 0, 0, 1, 0, 0, 9,
                       0, 0, 1, 2, 6, 8, 0, 0, 4,
                       0, 0, 2, 5, 0, 0, 1, 0, 0,
                       0, 6, 8, 0, 4, 0, 3, 2, 0,
                       0, 0, 9, 0, 5, 0, 4, 1, 0,
                       0, 1, 0, 0, 2, 0, 0, 9, 0,
                       3, 0, 0, 9, 1, 0, 0, 0, 6};

int sudoku_evil_1[] = {4, 7, 0, 8, 0, 0, 0, 0, 0,
                       0, 0, 0, 0, 1, 0, 0, 0, 0,
                       5, 0, 0, 0, 3, 4, 0, 7, 0,
                       7, 0, 3, 0, 0, 0, 0, 8, 0,
                       0, 8, 0, 0, 5, 0, 0, 2, 0,
                       0, 9, 0, 0, 0, 0, 1, 0, 5,
                       0, 1, 0, 2, 6, 0, 0, 0, 4,
                       0, 0, 0, 0, 4, 0, 0, 0, 0,
                       0, 0, 0, 0, 0, 8, 0, 3, 1};

int sudoku_evil_2[] = {0, 0, 1, 8, 3, 0, 0, 0, 0,
                       9, 6, 5, 0, 0, 0, 0, 0, 0,
                       0, 0, 0, 0, 1, 0, 9, 0, 0,
                       4, 0, 0, 0, 0, 0, 0, 1, 0,
                       0, 0, 9, 6, 0, 4, 3, 0, 0,
                       0, 8, 0, 0, 0, 0, 0, 0, 2,
                       0, 0, 7, 0, 9, 0, 0, 0, 0,
                       0, 0, 0, 0, 0, 0, 5, 4, 8,
                       0, 0, 0, 0, 2, 5, 1, 0, 0};

int puzzle_simple[] = {3, 0, 0, 0, 0, 8, 9, 0, 1,
                       0, 8, 2, 9, 4, 1, 0, 0, 7,
                       9, 0, 6, 0, 7, 0, 0, 8, 4,
                       1, 0, 9, 4, 0, 3, 0, 6, 0,
                       0, 7, 3, 0, 0, 9, 4, 1, 0,
                       0, 2, 0, 7, 1, 0, 3, 9, 0,
                       4, 9, 1, 0, 0, 0, 8, 0, 6,
                       0, 0, 0, 8, 6, 0, 1, 4, 9,
                       2, 6, 0, 1, 9, 4, 0, 0, 0};


bool saveFile(std::string filename){
    
    std::string fn = "data/"+filename;
    FILE *fp = fopen(fn.c_str(),"wb");
    
    if (fp == NULL){
        return (false);
    }
    
    for (int idx=0;idx<81;idx++){
        int value = puzzle11[idx];
        fwrite(&value, sizeof(int), 1, fp);
    }
    
    fclose(fp);
    
    return (true);
}